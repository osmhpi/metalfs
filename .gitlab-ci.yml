stages:
  - build

build-ocaccel:
  stage: build
  tags:
    - libvirt
  script:
      - mkdir -p /root/.docker
      - echo "{\"auths\":{\"reg.osmhpi.de\":{\"username\":\"$DOCKER_REGISTRY_USER\",\"password\":\"$DOCKER_REGISTRY_PASSWORD\"}}}" > /root/.docker/config.json
      - ./scripts/docker_build_sdk_base ocaccel
      - ./scripts/docker_build_sdk ocaccel

build-snap:
  stage: build
  tags:
    - libvirt
  script:
      - ./scripts/docker_build_sdk_base snap
      - |
        docker run -v $PWD:/workspace --workdir /workspace --rm metalfs/sdk-base:latest bash -e << EOF
          mkdir build
          cd build
          cmake -DOPTION_BUILD_EXAMPLES=ON -DOPTION_BUILD_DOCS=ON ..
          make -j4
        EOF
      - |
        docker run -v $PWD:/workspace --workdir /workspace --rm metalfs/sdk-base:latest bash -e << EOF
          cd build
          ./metal-filesystem-test
          ./metal-pipeline-test
        EOF
      - |
        docker run -v $PWD:/workspace --workdir /workspace --rm metalfs/sdk-base:latest bash -e << EOF
          cd example/src
          npm install --production
          make hw_project
        EOF
      - |
        docker run -v $PWD:/workspace --workdir /workspace --rm metalfs/sdk-base:latest bash -e << EOF
          cd example/src
          make test_target
        EOF
      - |
        docker run -v $PWD:/workspace --workdir /workspace --rm metalfs/sdk-base:latest bash -e << EOF
          cd example/src
          make model
          echo "/workspace/build/example-test" > /workspace/example/src/build/WebPACK_Sim/snap/hardware/sim/testlist.sh
          chmod +x /workspace/example/src/build/WebPACK_Sim/snap/hardware/sim/testlist.sh
          cd /workspace/example/src/build/WebPACK_Sim/snap/hardware/sim/xsim
          ../run_sim -explore -list testlist.sh -noaet
        EOF
      - ./scripts/docker_build_sdk snap

